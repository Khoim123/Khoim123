local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")

local PLACE_ID = game.PlaceId

-- GUI setup
local gui = Instance.new("ScreenGui", Players.LocalPlayer:WaitForChild("PlayerGui"))
gui.Name = "ServerListGui"

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 500, 0, 450)
frame.Position = UDim2.new(0.5, -250, 0.5, -225)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 16)

local title = Instance.new("TextLabel", frame)
title.Text = "üñß Danh s√°ch Server √≠t ng∆∞·ªùi (s·∫Øp x·∫øp theo ping)"
title.Size = UDim2.new(1, 0, 0, 40)
title.Font = Enum.Font.GothamBold
title.TextSize = 22
title.TextColor3 = Color3.new(1, 1, 1)
title.BackgroundTransparency = 1

local refreshButton = Instance.new("TextButton", frame)
refreshButton.Text = "üîÑ L√†m m·ªõi"
refreshButton.Size = UDim2.new(0, 120, 0, 35)
refreshButton.Position = UDim2.new(1, -130, 0, 5)
refreshButton.Font = Enum.Font.GothamBold
refreshButton.TextSize = 14
refreshButton.TextColor3 = Color3.new(1, 1, 1)
refreshButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
Instance.new("UICorner", refreshButton).CornerRadius = UDim.new(0, 10)

-- Scrolling server list
local scroll = Instance.new("ScrollingFrame", frame)
scroll.Size = UDim2.new(1, -20, 1, -60)
scroll.Position = UDim2.new(0, 10, 0, 50)
scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
scroll.ScrollBarThickness = 6
scroll.BackgroundTransparency = 1

local layout = Instance.new("UIListLayout", scroll)
layout.SortOrder = Enum.SortOrder.LayoutOrder
layout.Padding = UDim.new(0, 6)

-- H√†m l√†m m·ªõi danh s√°ch
local function refreshServerList()
	for _, child in ipairs(scroll:GetChildren()) do
		if child:IsA("Frame") then child:Destroy() end
	end

	task.spawn(function()
		local servers = {}
		local cursor = ""
		while #servers < 50 do -- load nhi·ªÅu ƒë·ªÉ ch·ªçn top ping th·∫•p
			local url = string.format("https://games.roblox.com/v1/games/%d/servers/Public?limit=100&sortOrder=Asc&cursor=%s", PLACE_ID, cursor)
			local ok, data = pcall(function()
				return HttpService:JSONDecode(game:HttpGet(url))
			end)
			if not ok or not data or not data.data then break end

			for _, server in ipairs(data.data) do
				if server.id ~= game.JobId then
					table.insert(servers, server)
				end
			end

			if data.nextPageCursor then
				cursor = data.nextPageCursor
			else
				break
			end
		end

		-- ∆Øu ti√™n s·∫Øp x·∫øp theo ping n·∫øu c√≥
		table.sort(servers, function(a, b)
			return (a.ping or 9999) < (b.ping or 9999)
		end)

		local displayed = 0
		for _, s in ipairs(servers) do
			if displayed >= 10 then break end
			local item = Instance.new("Frame", scroll)
			item.Size = UDim2.new(1, 0, 0, 40)
			item.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
			Instance.new("UICorner", item).CornerRadius = UDim.new(0, 8)

			local label = Instance.new("TextLabel", item)
			label.Text = string.format("üë• %d ng∆∞·ªùi | üì∂ Ping: %s", s.playing, s.ping or "?")
			label.Size = UDim2.new(1, -110, 1, 0)
			label.Position = UDim2.new(0, 10, 0, 0)
			label.BackgroundTransparency = 1
			label.TextColor3 = Color3.new(1, 1, 1)
			label.Font = Enum.Font.Gotham
			label.TextSize = 14
			label.TextXAlignment = Enum.TextXAlignment.Left

			local joinBtn = Instance.new("TextButton", item)
			joinBtn.Text = "Tham gia"
			joinBtn.Size = UDim2.new(0, 90, 0, 30)
			joinBtn.Position = UDim2.new(1, -95, 0.5, -15)
			joinBtn.BackgroundColor3 = Color3.fromRGB(0, 200, 100)
			joinBtn.TextColor3 = Color3.new(1, 1, 1)
			joinBtn.Font = Enum.Font.GothamBold
			joinBtn.TextSize = 14
			Instance.new("UICorner", joinBtn).CornerRadius = UDim.new(0, 8)

			joinBtn.MouseButton1Click:Connect(function()
				TeleportService:TeleportToPlaceInstance(PLACE_ID, s.id, Players.LocalPlayer)
			end)

			displayed += 1
		end

		scroll.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
	end)
end

refreshButton.MouseButton1Click:Connect(refreshServerList)
refreshServerList()